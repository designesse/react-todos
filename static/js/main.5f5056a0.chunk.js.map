{"version":3,"sources":["components/FormListItem.js","components/ListItem.js","components/List.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["FormListItem","props","useState","input","setInput","className","onSubmit","addTodo","type","value","onChange","e","target","placeholder","typeSingular","required","ListItem","name","nameSaved","setNameSaved","setName","status","setStatus","updateItem","onClick","deleteItem","class","List","items","setItems","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","iItem","findIndex","el","newItems","splice","inputSaved","inputNew","map","todo","typePlural","Todos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f5056a0.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./FormListItem.css\";\n\nconst FormListItem = (props) => {\n  const [input, setInput] = useState(\"\");\n\n  return (\n    <form\n      className=\"FormListItem\"\n      onSubmit={() => {\n        if (input !== \"\") {\n          props.addTodo(input);\n        }\n      }}\n    >\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder={`Enter a ${props.typeSingular}`}\n        required\n      />\n      <button type=\"submit\">+</button>\n    </form>\n  );\n};\n\nexport default FormListItem;\n","import { useState } from \"react\";\n\nconst ListItem = (props) => {\n  const [nameSaved, setNameSaved] = useState(props.name);\n  const [name, setName] = useState(props.name);\n  const [status, setStatus] = useState(null);\n\n  const renderItem = () => {\n    if (status === \"edit\") {\n      return (\n        <form\n          onSubmit={() => {\n            if (name !== \"\") {\n              setStatus(\"null\");\n              props.updateItem(nameSaved, name);\n              setNameSaved(name);\n            }\n          }}\n        >\n          <div className=\"buttons-group\">\n            <button type=\"submit\">update</button>\n            <button\n              onClick={() => {\n                setStatus(\"null\");\n                setName(nameSaved);\n              }}\n            >\n              cancel\n            </button>\n          </div>\n          <div className=\"input-wrapper\">\n            <input\n              onChange={(e) => setName(e.target.value)}\n              type=\"text\"\n              value={name}\n              required\n            />\n          </div>\n        </form>\n      );\n    }\n    if (status === \"delete\") {\n      return (\n        <form\n          onSubmit={() => {\n            setStatus(\"null\");\n            props.deleteItem(props.name);\n          }}\n        >\n          <div className=\"buttons-group\">\n            <button onClick={() => setStatus(\"null\")}>cancel</button>\n          </div>\n          <div className=\"ellipsis-wrapper\">\n            <button type=\"submit\">delete</button>\n            {name}\n          </div>\n        </form>\n      );\n    }\n    return (\n      <div>\n        <div class=\"buttons-group\">\n          <button onClick={() => setStatus(\"edit\")}>edit</button>\n          <button onClick={() => setStatus(\"delete\")}>delete</button>\n        </div>\n        <div class=\"ellipsis-wrapper\">\n          <div class=\"ellipsis-text\">{name}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return <>{renderItem()}</>;\n};\n\nexport default ListItem;\n","import { useState, useEffect } from \"react\";\nimport FormListItem from \"./FormListItem\";\nimport ListItem from \"./ListItem\";\nimport \"./List.css\";\n\nconst List = (props) => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    setItems(\n      localStorage.getItem(props.type)\n        ? JSON.parse(localStorage.getItem(props.type))\n        : []\n    );\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(props.type, JSON.stringify(items));\n  }, [items]);\n\n  const addItem = (input) => {\n    const newItems = [...items, { name: input }];\n    setItems(newItems);\n  };\n\n  const deleteItem = (input) => {\n    const iItem = items.findIndex((el) => el.name === input);\n    const newItems = [...items];\n    newItems.splice(iItem, 1);\n    setItems(newItems);\n  };\n\n  const updateItem = (inputSaved, inputNew) => {\n    const iItem = items.findIndex((el) => el.name === inputSaved);\n    const newItems = [...items];\n    newItems[iItem].name = inputNew;\n    setItems(newItems);\n  };\n\n  return (\n    <div className=\"List\">\n      <ul>\n        {items &&\n          items.map((todo) => (\n            <li key={todo.name}>\n              <ListItem\n                name={todo.name}\n                deleteItem={deleteItem}\n                updateItem={updateItem}\n              />\n            </li>\n          ))}\n      </ul>\n      <FormListItem addTodo={addItem} typeSingular={props.typeSingular} />\n      <button className=\"right\" onClick={() => setItems([])}>\n        Delete all {props.typePlural}\n      </button>\n    </div>\n  );\n};\n\nexport default List;\n","import List from \"./List\";\n\nconst Todos = () => {\n  return (\n    <div>\n      <h3>Todos</h3>\n      <List type=\"todos\" typePlural=\"todos\" typeSingular=\"todo\" />\n    </div>\n  );\n};\n\nexport default Todos;\n","import Todos from \"./components/Todos\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todos />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}